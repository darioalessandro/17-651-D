//
// 17-651: FSP model of a simple infusion pump
//
// ASSUMPTIONS
// - The user can choose, in the setup phase, which item of info to enter next.
// - The simple enter_value action is a simple number pad where the user enters
//   numeric values.
// - There exist 'set' and 'cancel' buttons, which are the targets of press_set
//   and press_cancel.
// - When the user turns the unit off, the unit will be in a state as if it was
//   just plugged in.
//

//
// Set of actions that the user of the LTSA tool can control in an
// animation of this model.
//
menu UserControlMenu = {
    change_settings, clear_rate, confirm_settings, connect_set,
    dispense_main_med_flow, enter_value, erase_and_unlock_line,
    flow_unblocked, sound_alarm, lock_unit, plug_in, press_cancel, 
    press_set, set_rate, silence_alarm, turn_off, unlock_unit, unplug,
    flow_blocked, check_charge, auto_switch
}

//======================
// Constants and Ranges
//======================

//
// States of the pump alarm
//
const AlarmActivated = 0    // Alarm currently active
const AlarmSilenced  = 1    // Alarm currently inactive

range AlarmStateT = AlarmActivated .. AlarmSilenced

//
// States of the pump settings
//
const ParamsNotSet = 2    // pump parameters not set yet
const ParamsSet    = 3    // pump parameters already set

range ParamsStateT = ParamsNotSet .. ParamsSet

//
// Locked/unlocked states of a line with respect to a pump channel
//
const LineUnlocked = 4  // line not locked into a pump channel 
const LineLocked   = 5  // line locked into a pump channel

range LineLockStateT = LineUnlocked .. LineLocked

//
// Locked/unlocked states of the pump unit
//
const UnitUnlocked = 6  // the keypad of the pump is not locked
const UnitLocked   = 7  // the keypad of the pump is locked

range UnitLockStateT = UnitUnlocked .. UnitLocked

//
// To turn off the machine, the user is expected to tap on the Off key twice in a row.
//
const TurnOffKeyNotPressed = 30  // Initial state.
const TurnOffKeyPressed   = 31  // Var used to store the fact that the user pressed the TurnOffKeyOnce

range TurnOffKeyStateT = TurnOffKeyNotPressed .. TurnOffKeyPressed

const PowerModePowerGrid = 30  // Enum value issued when system is powered by the electrical grid
const PowerModeBattery   = 31  // Enum value used when the system is powered by a battery
range PowerModeStateT = PowerModePowerGrid .. PowerModeBattery

//=====================
// Process Definitions
//=====================

PUMP = UNPLUGGED,

UNPLUGGED =
(
    plug_in -> POWER_OFF
),

POWER_OFF = 
(
    turn_on -> SELF_TEST
),

SELF_TEST = 
(
	self_test -> self_test_error -> POWER_OFF
    |
   	self_test -> SETUP[ParamsNotSet][LineUnlocked][TurnOffKeyNotPressed][PowerModePowerGrid]
),

BACKUP_SUPPLY =
(
 auto_switch -> POWER_OFF
),

//
// Pump in setup mode:
// - Once required pump parameters (just rate in this case) are set,
//   physical connections can be made and line can be locked
//
SETUP[params:ParamsStateT][lineLock:LineLockStateT][turnOffState:TurnOffKeyStateT][power:PowerModeStateT] = 
(
    unplug -> UNPLUGGED
    |
    power_grid_failure -> SETUP[params][lineLock][turnOffState][power]
    |
    when (turnOffState == TurnOffKeyPressed) 
       turn_off -> POWER_OFF
    |
    when (turnOffState == TurnOffKeyNotPressed) 
       turn_off -> SETUP[ParamsSet][lineLock][TurnOffKeyPressed][power]
    |   
    when (params == ParamsNotSet && lineLock == LineUnlocked)
        set_rate -> enter_value ->
            (press_set -> SETUP[ParamsSet][lineLock][TurnOffKeyNotPressed][power]
             |
             press_cancel -> SETUP[ParamsNotSet][lineLock][TurnOffKeyNotPressed][power])
    |
    when (params == ParamsSet && lineLock == LineUnlocked)
        clear_rate -> SETUP[ParamsNotSet][lineLock][TurnOffKeyNotPressed][power]
    |
    when (params == ParamsSet && lineLock == LineUnlocked)
        connect_set -> purge_air -> lock_line -> SETUP[params][LineLocked][TurnOffKeyNotPressed][power]
    |
    when (lineLock == LineLocked)
        confirm_settings -> INFUSION[UnitUnlocked][TurnOffKeyNotPressed][power]
    |
    when (lineLock == LineLocked)
        erase_and_unlock_line -> SETUP[params][LineUnlocked][TurnOffKeyNotPressed][power]
  
),

//
// Pump in infusion mode:
// - Always be able to turn the unit off, even if locked
// - Allow the user to lock/unlock the unit
// - Errors could occur with the pump (e.g., line became pinched or plugged)
//
INFUSION[unitLock:UnitLockStateT][turnOffState:TurnOffKeyStateT][power:PowerModeStateT] =
(
    unplug -> UNPLUGGED
    |
    power_grid_failure -> INFUSION[unitLock][turnOffState][power]
    |
    press_hold -> HOLD[unitLock][turnOffState][power]
    |
    when (turnOffState == TurnOffKeyPressed) 
       turn_off -> POWER_OFF
    |
    when (turnOffState == TurnOffKeyNotPressed) 
       turn_off -> INFUSION[unitLock][TurnOffKeyPressed][power]
    |
    when (unitLock == UnitUnlocked)
        change_settings -> SETUP[ParamsSet][LineLocked][TurnOffKeyNotPressed][power]
    |
    when (unitLock == UnitUnlocked)
        lock_unit -> INFUSION[UnitLocked][TurnOffKeyNotPressed][power]
    |
    when (unitLock == UnitLocked)
        unlock_unit -> INFUSION[UnitUnlocked][TurnOffKeyNotPressed][power]
    |
    dispense_main_med_flow -> INFUSION[unitLock][TurnOffKeyNotPressed][power]
    |
    flow_blocked -> sound_alarm -> INFUSION_BLOCKED[unitLock][AlarmActivated][TurnOffKeyNotPressed][power]
),

//
// Pump is on hold. You can turn it off or resume dispensing.
//

HOLD[unitLock:UnitLockStateT][turnOffState:TurnOffKeyStateT][power:PowerModeStateT] =
(
    unplug -> UNPLUGGED
    |
    power_grid_failure -> HOLD[unitLock][turnOffState][power]
    |
    press_resume -> INFUSION[unitLock][turnOffState][power]
),

//
// Pump stuck (medication flow suspended)
//
INFUSION_BLOCKED[unitLock:UnitLockStateT][alarm:AlarmStateT][turnOffState:TurnOffKeyStateT][power:PowerModeStateT] =
(
    unplug -> UNPLUGGED
    |
    power_grid_failure -> INFUSION_BLOCKED[unitLock][alarm][turnOffState][power]
    |
    when (turnOffState == TurnOffKeyPressed) 
       turn_off -> POWER_OFF
    |
    when (turnOffState == TurnOffKeyNotPressed) 
       turn_off -> INFUSION_BLOCKED[unitLock][alarm][TurnOffKeyPressed][power]
    |
    when (alarm == AlarmActivated)
        sound_alarm -> INFUSION_BLOCKED[unitLock][alarm][TurnOffKeyNotPressed][power]
    |
    when (alarm == AlarmActivated)
        silence_alarm -> INFUSION_BLOCKED[unitLock][AlarmSilenced][TurnOffKeyNotPressed][power]
    |
    flow_unblocked -> INFUSION[unitLock][TurnOffKeyNotPressed][power]
).
